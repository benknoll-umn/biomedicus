- description: Processes an RTF document into plaintext.
  entry_point: edu.umn.biomedicus.rtf.RtfProcessor
  human_name: RTF Reader
  implementation_lang: Java
  name: biomedicus-rtf-processor
  outputs:
  - description: Rtf bold formatting.
    name: bold
  - description: Rtf italic formatting.
    name: italic
  - description: Rtf underlined formatting.
    name: underlined
  parameters:
  - data_type: str
    description: The name of the event binary data containing the RTF-encoded document.Defaults
      to "rtf"
    name: binary_data_name
    required: false
  - data_type: str
    description: The name of the document to create to hold the plaintext.Defaults
      to "plaintext"
    name: output_document_name
    required: false
- description: Labels sentences given document text.
  entry_point: biomedicus.sentences.bi_lstm
  human_name: Sentence Detector
  implementation_lang: Python
  name: biomedicus-sentences
  outputs:
  - name: sentences
    optional: false
- description: Labels sentences where each line in the input document is a sentence.
  human_name: One per Line Sentences
  implementation_lang: Python
  name: biomedicus-sentences-one-per-line
  outputs:
  - name: sentences
    optional: false
- description: Labels part of speech tags on the document.
  entry_point: edu.umn.biomedicus.tagging.tnt.TntPosTaggerProcessor
  human_name: TnT Part of Speech Tagger
  implementation_lang: Java
  inputs:
  - name: sentences
    name_from_parameter: sentences_index
    reference: biomedicus-sentences/sentences
  - description: Existing tokens to use. Otherwise will tokenize each sentence.
    name: ''
    name_from_parameter: token_index
  name: biomedicus-tnt-tagger
  outputs:
  - description: Labeled part of speech tags on tokens.
    name: pos_tags
    name_from_parameter: target_index
    properties:
    - data_type: str
      description: The penn-treebank tag for the token.
      name: tag
      nullable: false
  parameters:
  - data_type: str
    description: The name of the index containing sentences. Defaults to "sentences"
    name: sentences_index
    required: false
  - data_type: str
    description: The target index to create for POS tags. Defaults to "pos_tags"
    name: target_index
    required: false
  - data_type: str
    description: The name of an index of tokens. By default the processor will do
      tokenization on its own.
    name: token_index
    required: false
- description: Labels acronyms.
  entry_point: edu.umn.biomedicus.acronym.AcronymDetectorProcessor
  human_name: Acronym Detector
  implementation_lang: Java
  inputs:
  - name: pos_tags
    reference: biomedicus-tnt-tagger/pos_tags
  name: biomedicus-acronyms
  outputs:
  - description: The highest scoring acronym disambiguation for an acronym.
    name: acronyms
    properties:
    - data_type: float
      description: The acronym's score.
      name: score
      nullable: false
    - data_type: str
      description: The acronym's expansion.
      name: expansion
      nullable: false
  - description: The non-highest-scoring disambiguations.
    name: other_acronym_senses
    properties:
    - data_type: float
      description: The acronym's score.
      name: score
      nullable: false
    - data_type: str
      description: The acronym's expansion.
      name: expansion
      nullable: false
  parameters:
  - data_type: bool
    description: Whether the non-highest scoring acronym disambiguations should be
      labeled
    name: labelOtherSenses
    required: false
- description: Labels norm forms for words.
  entry_point: edu.umn.biomedicus.normalization.NormalizationProcessor
  human_name: SPECIALIST Normalizer
  implementation_lang: Java
  inputs:
  - name: pos_tags
    reference: biomedicus-tnt-tagger/pos_tags
  name: biomedicus-normalizer
  outputs:
  - description: The labeled normalized form of a word per token.
    name: norm_forms
    properties:
    - data_type: str
      description: The normal form of the word.
      name: norm
      nullable: false
- description: Labels UMLS Concepts
  entry_point: edu.umn.biomedicus.concepts.DictionaryConceptDetector
  human_name: UMLS Concept Detector
  implementation_lang: Java
  inputs:
  - name: sentences
    reference: biomedicus-sentences/sentences
  - name: pos_tags
    reference: biomedicus-tnt-tagger/pos_tags
  - name: norm_forms
    reference: biomedicus-normalizer/norm_forms
  - name: acronyms
    reference: biomedicus-acronyms/acronyms
  name: biomedicus-concepts
  outputs:
  - description: The UMLS concepts that appear in the text.
    name: umls_concepts
    properties:
    - data_type: str
      description: The UMLS Source Unique Identifier for the concept.
      name: sui
      nullable: false
    - data_type: str
      description: The UMLS Concept Unique Identifier
      name: cui
      nullable: false
    - data_type: str
      description: The UMLS Type Unique Identifier
      name: tui
      nullable: false
    - data_type: str
      description: The UMLS source vocabulary the concept originated from
      name: source
      nullable: false
    - data_type: float
      description: A score for the concept, direct phrase matches are highest, lowest
        are the normalized bag of words matches.
      name: score
      nullable: false
  - description: Text that is covered by one or more concepts.
    name: umls_terms
- description: Detects Historical, Negated, and Uncertain modifications on umls terms
  entry_point: edu.umn.biomedicus.modification.ModificationDetector
  human_name: BioMedICUS Modification Detector
  implementation_lang: Java
  inputs:
  - name: sentences
    reference: biomedicus-sentences/sentences
  - name: pos_tags
    reference: biomedicus-tnt-tagger/pos_tags
  - name: umls_terms
    name_from_parameter: terms_index
    reference: biomedicus-concepts/umls_terms
  name: biomedicus-modification
  outputs:
  - description: Spans of negated terms.
    name: negated
  - description: Spans of terms that are uncertain.
    name: uncertain
  - description: Spans of terms that are historical.
    name: historical
  parameters:
  - data_type: str
    name: terms_index
    required: false
- description: Detects which UMLS terms are negated.
  human_name: Negex Negation Detector
  implementation_lang: Python
  inputs:
  - name: sentences
    optional: false
    reference: biomedicus-sentences/sentences
  - name: umls_terms
    name_from_parameter: terms_index
    optional: false
    reference: biomedicus-concepts/umls_terms
  name: biomedicus-negex
  outputs:
  - description: Spans of negated terms.
    name: negated
    optional: false
  - description: Spans of phrases that trigger negation.
    name: negation_trigger
    optional: false
  parameters:
  - data_type: str
    description: The label index containing terms that should be checked for negation
    name: terms_index
    required: false
